steps:

  - id: "Gerando service-account-storage.json"
    name: 'gcr.io/cloud-builders/gcloud'
    args: 
      - kms
      - decrypt
      - --ciphertext-file=./backend/storage/credentials/google/service-account-storage.json.enc
      - --plaintext-file=./backend/storage/credentials/google/service-account-storage.json
      - --location=global
      - --keyring=testing-lesson
      - --key=service-account

  - id: "Rodando docker-compose"
    name: 'docker/compose'
    args: ['-f', 'docker-compose.prod.yaml', 'up', '-d']
    env: 
      - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
      - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
      - GOOGLE_CLOUD_STORAGE_BUCKET=flix-catalog
      - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/flix-catalog
      - TESTING_PROD=true

  - id: "Chown in /var/www"
    name: "gcr.io/cloud-builders/docker"
    args: ['exec', '-u', 'root', '-t', 'app', 'chown', '-R', 'www-data:www-data', '/var/www']

  - id: "Rodando composer"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'composer', 'install', '-d', '/var/www/backend']

  - id: "Copiando backend .env"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'cp', '/var/www/backend/.env.example', '/var/www/backend/.env']

  - id: "Copiando .env.testing"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'cp', '/var/www/backend/.env.testing.example', '/var/www/backend/.env.testing']

  - id: "Rodando key:generate"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'php', '/var/www/backend/artisan', 'key:generate']

  - id: "Rodando migrations"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'php', '/var/www/backend/artisan', 'migrate']

  - id: "Rodando Phpunit"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'php', '/var/www/backend/vendor/bin/phpunit', '-c', '/var/www/backend/phpunit.xml']

  - id: "Copiando frontend .env"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'cp', '/var/www/frontend/.env.example', '/var/www/frontend/.env']
    
  - id: "Install frontend"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'npm', 'install', '--prefix', '/var/www/frontend']  

  - id: "Permission on scripts/build.sh"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'chmod', '+x', '/var/www/frontend/scripts/build.sh']  

  - id: "Build frontend"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'npm', 'run', 'build-laravel', '--prefix', '/var/www/frontend']  

  - id: "Test Laravel and React Integration"
    name: 'gcr.io/cloud-builders/docker'
   args: ['exec', '-w', '/var/www/backend', '-t', 'app', 'php', 'artisan', 'dusk', '--env=testing']